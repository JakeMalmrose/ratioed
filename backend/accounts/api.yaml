
openapi: 3.0.3
info:
  title: Ratioed Accounts API
  version: 1.0.0
paths:
  /account:
    post:
      summary: Create a new account
      operationId: CreateAccount
      requestBody:
        $ref: '#/components/requestBodies/NewAccount'
      responses:
        '201':
          description: The created account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    get:
      summary: Get all accounts
      operationId: GetAccounts
      parameters:
        - name: username
          in: query
          required: false
          schema:
            type: string
          description: A string used to perform partial matching on a username. For example, jac would match bojack, jack, jac, ajac, etc. Case sensitive
      responses:
        '200':
          description: A list of accounts that match the query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
  /account/{accountId}:
    get:
      summary: Get a single account
      operationId: GetAccountById
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      responses:
        '200':
          description: The account with the matching id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Not found
    patch:
      summary: Update an account
      operationId: UpdateAccountById
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccount'
      responses:
        '200':
          description: The updated account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          description: Unauthenticated (not logged in)
        '403':
          description: Unauthorized (not the correct account)
    delete:
      summary: Delete an account
      operationId: DeleteAccountById
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      responses:
        '204':
          description: Account successfully deleted
        '401':
          description: Unauthenticated (not logged in)
        '403':
          description: Unauthorized (not the correct account)

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  parameters:
    AccountIdParam:
      name: accountId
      in: path
      description: The id of the account to perform an operation on
      required: true
      schema:
        type: integer
        
  requestBodies:
    NewAccount:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                pattern: '^.*@.*\..*$'
                description: Email of the account
              username:
                type: string
                description: Username of the account
              bio:
                type: string
                description: Bio of the account
              pfp:
                type: string
                format: uri
                description: Uri for a pfp for the account
            required:
              - email
              - username
    UpdateAccount:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
                description: Username of the account
              bio:
                type: string
                description: Bio of the account
              pfp:
                type: string
                format: uri
                description: Uri for a pfp for the account
  schemas:
    Account:
      type: object
      properties:
        email:
          type: string
          format: email
          pattern: '^.*@.*\..*$'
          description: Email of the account
        username:
          type: string
          description: Username of the account
        bio:
          type: string
          description: Bio of the account
        pfp:
          type: string
          format: uri
          description: Uri for a pfp for the account
      required:
        - email
        - username
        - bio
        - pfp
    Accounts:
      type: array
      items:
        $ref: '#/components/schemas/Account'
